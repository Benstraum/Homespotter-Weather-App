[{"/Users/baaiinn/weather/src/index.js":"1","/Users/baaiinn/weather/src/reportWebVitals.js":"2","/Users/baaiinn/weather/src/components/App/App.js":"3","/Users/baaiinn/weather/src/redux/reducers/index.js":"4","/Users/baaiinn/weather/src/redux/sagas/index.js":"5","/Users/baaiinn/weather/src/components/CurrentDisplay/CurrentDisplay.js":"6","/Users/baaiinn/weather/src/redux/reducers/weatherReducer.js":"7","/Users/baaiinn/weather/src/redux/sagas/weatherSaga.js":"8","/Users/baaiinn/weather/src/redux/reducers/metricReducer.js":"9","/Users/baaiinn/weather/src/components/LocationQuery/LocationQuery.js":"10","/Users/baaiinn/weather/src/components/CondensedForecast/CondensedForecast.js":"11"},{"size":1252,"mtime":1607145652976,"results":"12","hashOfConfig":"13"},{"size":362,"mtime":1607141268829,"results":"14","hashOfConfig":"13"},{"size":1047,"mtime":1607216561795,"results":"15","hashOfConfig":"13"},{"size":259,"mtime":1607200918904,"results":"16","hashOfConfig":"13"},{"size":215,"mtime":1607148156394,"results":"17","hashOfConfig":"13"},{"size":3555,"mtime":1607209836638,"results":"18","hashOfConfig":"13"},{"size":380,"mtime":1607211014120,"results":"19","hashOfConfig":"13"},{"size":1146,"mtime":1607207572851,"results":"20","hashOfConfig":"13"},{"size":285,"mtime":1607201503094,"results":"21","hashOfConfig":"13"},{"size":1374,"mtime":1607207868746,"results":"22","hashOfConfig":"13"},{"size":1284,"mtime":1607214906342,"results":"23","hashOfConfig":"13"},{"filePath":"24","messages":"25","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"26"},"1csyjq4",{"filePath":"27","messages":"28","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"26"},{"filePath":"29","messages":"30","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"31","messages":"32","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"26"},{"filePath":"33","messages":"34","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"26"},{"filePath":"35","messages":"36","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"37","messages":"38","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"39","messages":"40","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"41","messages":"42","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"26"},{"filePath":"43","messages":"44","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"45","messages":"46","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},"/Users/baaiinn/weather/src/index.js",[],["47","48"],"/Users/baaiinn/weather/src/reportWebVitals.js",[],"/Users/baaiinn/weather/src/components/App/App.js",[],"/Users/baaiinn/weather/src/redux/reducers/index.js",[],"/Users/baaiinn/weather/src/redux/sagas/index.js",[],"/Users/baaiinn/weather/src/components/CurrentDisplay/CurrentDisplay.js",["49"],"/Users/baaiinn/weather/src/redux/reducers/weatherReducer.js",[],"/Users/baaiinn/weather/src/redux/sagas/weatherSaga.js",[],"/Users/baaiinn/weather/src/redux/reducers/metricReducer.js",[],"/Users/baaiinn/weather/src/components/LocationQuery/LocationQuery.js",[],"/Users/baaiinn/weather/src/components/CondensedForecast/CondensedForecast.js",["50"],{"ruleId":"51","replacedBy":"52"},{"ruleId":"53","replacedBy":"54"},{"ruleId":"55","severity":1,"message":"56","line":10,"column":8,"nodeType":"57","endLine":10,"endColumn":10,"suggestions":"58"},{"ruleId":"59","severity":1,"message":"60","line":1,"column":17,"nodeType":"61","messageId":"62","endLine":1,"endColumn":26},"no-native-reassign",["63"],"no-negated-in-lhs",["64"],"react-hooks/exhaustive-deps","React Hook useEffect has a missing dependency: 'props'. Either include it or remove the dependency array. However, 'props' will change when *any* prop changes, so the preferred fix is to destructure the 'props' object outside of the useEffect call and refer to those specific props inside useEffect.","ArrayExpression",["65"],"no-unused-vars","'useEffect' is defined but never used.","Identifier","unusedVar","no-global-assign","no-unsafe-negation",{"desc":"66","fix":"67"},"Update the dependencies array to be: [props]",{"range":"68","text":"69"},[354,356],"[props]"]