[{"/Users/baaiinn/weather/src/index.js":"1","/Users/baaiinn/weather/src/reportWebVitals.js":"2","/Users/baaiinn/weather/src/components/App/App.js":"3","/Users/baaiinn/weather/src/redux/reducers/index.js":"4","/Users/baaiinn/weather/src/redux/sagas/index.js":"5","/Users/baaiinn/weather/src/components/CurrentDisplay/CurrentDisplay.js":"6","/Users/baaiinn/weather/src/redux/reducers/weatherReducer.js":"7","/Users/baaiinn/weather/src/redux/sagas/weatherSaga.js":"8","/Users/baaiinn/weather/src/redux/reducers/metricReducer.js":"9","/Users/baaiinn/weather/src/components/LocationQuery/LocationQuery.js":"10","/Users/baaiinn/weather/src/components/CondensedForecast/CondensedForecast.js":"11","/Users/baaiinn/weather/src/redux/reducers/errorReducer.js":"12"},{"size":1252,"mtime":1607145652976,"results":"13","hashOfConfig":"14"},{"size":362,"mtime":1607141268829,"results":"15","hashOfConfig":"14"},{"size":1169,"mtime":1607283284186,"results":"16","hashOfConfig":"14"},{"size":317,"mtime":1607221374486,"results":"17","hashOfConfig":"14"},{"size":215,"mtime":1607148156394,"results":"18","hashOfConfig":"14"},{"size":4071,"mtime":1607219723945,"results":"19","hashOfConfig":"14"},{"size":316,"mtime":1607219738570,"results":"20","hashOfConfig":"14"},{"size":778,"mtime":1607284078546,"results":"21","hashOfConfig":"14"},{"size":285,"mtime":1607201503094,"results":"22","hashOfConfig":"14"},{"size":1802,"mtime":1607284292304,"results":"23","hashOfConfig":"14"},{"size":1334,"mtime":1607282819739,"results":"24","hashOfConfig":"14"},{"size":323,"mtime":1607220146402,"results":"25","hashOfConfig":"14"},{"filePath":"26","messages":"27","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"28"},"1csyjq4",{"filePath":"29","messages":"30","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"28"},{"filePath":"31","messages":"32","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"33","messages":"34","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"35","messages":"36","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"28"},{"filePath":"37","messages":"38","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"39","usedDeprecatedRules":"28"},{"filePath":"40","messages":"41","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"28"},{"filePath":"42","messages":"43","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"44","messages":"45","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"28"},{"filePath":"46","messages":"47","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"48","messages":"49","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"50","messages":"51","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},"/Users/baaiinn/weather/src/index.js",[],["52","53"],"/Users/baaiinn/weather/src/reportWebVitals.js",[],"/Users/baaiinn/weather/src/components/App/App.js",[],"/Users/baaiinn/weather/src/redux/reducers/index.js",[],"/Users/baaiinn/weather/src/redux/sagas/index.js",[],"/Users/baaiinn/weather/src/components/CurrentDisplay/CurrentDisplay.js",["54"],"import React, { useEffect } from 'react';\nimport './CurrentDisplay.css'\nimport { connect } from 'react-redux'\n\nfunction CurrentDisplay(props) {\n    useEffect(() => {\n        //I only want it to auto populate on initial upload then the user controls via the searchbar\n        props.location === '' && props.dispatch({ type: 'TEST_SAGA' })\n    }, [])\n    //simple funtion to provide a true false statement to use either metric or imperial via redux\n    const setIsCelcius = (bool) =>{\n        props.dispatch({type:'SET_IS_CELCIUS',payload:bool})\n    }\n    return (\n        //Through this component I make use of coditional rendering to swap \n        //between imperial and metric usits as well as to ensure no crashes trying to access objects that arent there\n\n        <div className=\"Current\">\n            {/* Header with place, time, and sky condition. Using conditional rendering while querying the weather API */}\n            <header className=\"current-header\">\n                {/* Location ,  country  */}\n                {props.location ?\n                    <h1>{props.location.name + ', ' + props.location.country}</h1>\n                    :\n                    <h1>Location</h1>}\n                    {/* Time of updated weather at location */}\n                {props.location ?\n                    <h2>{props.current.last_updated}</h2>\n                    :\n                    <h2>Time</h2>}\n                    {/* Sky condition text */}\n                {props.location ?\n                    <div className=\"skies\"><h3>{props.current.condition.text}</h3></div>\n                    :\n                    <h3>Skies Condition</h3>}\n                    {props.isCelcius?<h4>Metric</h4>\n                    :\n                    <h4>Imperial</h4>\n\n                    }\n            </header>\n            <main className=\"current-main\" >\n                <div className='firstHalf' style={{ display: 'flex' }}>\n                    {/* Icon */}\n                    {props.location ?\n                        <img src={props.current.condition.icon} alt=\"sky condition visual aid\"></img>\n                        :\n                        <h3>Sky icon</h3>}\n                    {/* Tempurature && Farenheight/Celcius Toggle */}\n                    {props.location ?\n                        props.isCelcius ? <h1 >{props.current.temp_c} </h1> : <h1>{props.current.temp_f} </h1>\n                        :\n                        <h3>Temp F or C</h3>}\n                    {\n                        <h2 >\n                            <button onClick={() => setIsCelcius(false)} >°F</button> | <button onClick={() => setIsCelcius(true)}>°C</button>\n                        </h2>\n                    }\n                </div>\n\n                <div className=\"secondHalf\">\n                    {/* precipitation */}\n                    {props.location ?\n                            props.isCelcius ? \n                            <h3>Precipitation: {props.current.precip_mm}  mm</h3>\n                            :\n                            <h3>Precipitation: {props.current.precip_in}  in</h3>\n                        :\n                        <h3>Precipitation</h3>\n                    }\n                    {/* Humidity */}\n                    {props.location ?\n                        <h3>Humidity {props.current.humidity} %</h3>\n                        :\n                        <h3>Humidity</h3>\n                    }\n                    {/* wind */}\n                    {props.location ?\n                        props.isCelcius ? \n                        <h3>Wind {props.current.gust_kph} km/h</h3>\n                        :\n                        <h3>Wind {props.current.gust_mph} mph</h3>\n                    :\n                    <h3>Wind Speed</h3>\n                    }\n                </div>\n            </main>\n        </div>\n    );\n}\n\nconst mapStateToProps = state => ({\n \n    location:state.weatherReducer.data.location,\n    current:state.weatherReducer.data.current,\n    isCelcius:state.metricReducer   \n});\nexport default connect(mapStateToProps)(CurrentDisplay);","/Users/baaiinn/weather/src/redux/reducers/weatherReducer.js",[],"/Users/baaiinn/weather/src/redux/sagas/weatherSaga.js",[],"/Users/baaiinn/weather/src/redux/reducers/metricReducer.js",[],"/Users/baaiinn/weather/src/components/LocationQuery/LocationQuery.js",["55"],"/Users/baaiinn/weather/src/components/CondensedForecast/CondensedForecast.js",[],"/Users/baaiinn/weather/src/redux/reducers/errorReducer.js",[],{"ruleId":"56","replacedBy":"57"},{"ruleId":"58","replacedBy":"59"},{"ruleId":"60","severity":1,"message":"61","line":9,"column":8,"nodeType":"62","endLine":9,"endColumn":10,"suggestions":"63"},{"ruleId":"64","severity":1,"message":"65","line":1,"column":27,"nodeType":"66","messageId":"67","endLine":1,"endColumn":36},"no-native-reassign",["68"],"no-negated-in-lhs",["69"],"react-hooks/exhaustive-deps","React Hook useEffect has a missing dependency: 'props'. Either include it or remove the dependency array. However, 'props' will change when *any* prop changes, so the preferred fix is to destructure the 'props' object outside of the useEffect call and refer to those specific props inside useEffect.","ArrayExpression",["70"],"no-unused-vars","'useEffect' is defined but never used.","Identifier","unusedVar","no-global-assign","no-unsafe-negation",{"desc":"71","fix":"72"},"Update the dependencies array to be: [props]",{"range":"73","text":"74"},[345,347],"[props]"]